2024-04-05 22:09:30,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:09:30,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:09:30,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:09:30,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:09:31,509:INFO:PyCaret RegressionExperiment
2024-04-05 22:09:31,510:INFO:Logging name: reg-default-name
2024-04-05 22:09:31,510:INFO:ML Usecase: MLUsecase.REGRESSION
2024-04-05 22:09:31,511:INFO:version 3.3.0
2024-04-05 22:09:31,511:INFO:Initializing setup()
2024-04-05 22:09:31,511:INFO:self.USI: 7f0c
2024-04-05 22:09:31,511:INFO:self._variable_keys: {'gpu_n_jobs_param', 'target_param', 'exp_name_log', 'idx', 'fold_groups_param', 'fold_shuffle_param', 'exp_id', 'y_train', 'X_train', 'X', 'seed', 'log_plots_param', '_available_plots', 'y', 'X_test', 'data', 'pipeline', 'USI', 'transform_target_param', 'logging_param', 'fold_generator', 'y_test', 'n_jobs_param', 'html_param', 'memory', '_ml_usecase', 'gpu_param'}
2024-04-05 22:09:31,512:INFO:Checking environment
2024-04-05 22:09:31,512:INFO:python_version: 3.9.4
2024-04-05 22:09:31,512:INFO:python_build: ('tags/v3.9.4:1f2e308', 'Apr  6 2021 13:40:21')
2024-04-05 22:09:31,512:INFO:machine: AMD64
2024-04-05 22:09:31,513:INFO:platform: Windows-10-10.0.22621-SP0
2024-04-05 22:09:31,519:INFO:Memory: svmem(total=8423395328, available=1391177728, percent=83.5, used=7032217600, free=1391177728)
2024-04-05 22:09:31,519:INFO:Physical Core: 4
2024-04-05 22:09:31,519:INFO:Logical Core: 8
2024-04-05 22:09:31,519:INFO:Checking libraries
2024-04-05 22:09:31,519:INFO:System:
2024-04-05 22:09:31,519:INFO:    python: 3.9.4 (tags/v3.9.4:1f2e308, Apr  6 2021, 13:40:21) [MSC v.1928 64 bit (AMD64)]
2024-04-05 22:09:31,520:INFO:executable: D:\Projects\pycaret\Scripts\python.exe
2024-04-05 22:09:31,520:INFO:   machine: Windows-10-10.0.22621-SP0
2024-04-05 22:09:31,520:INFO:PyCaret required dependencies:
2024-04-05 22:09:31,760:INFO:                 pip: 20.2.3
2024-04-05 22:09:31,760:INFO:          setuptools: 49.2.1
2024-04-05 22:09:31,760:INFO:             pycaret: 3.3.0
2024-04-05 22:09:31,760:INFO:             IPython: 8.18.1
2024-04-05 22:09:31,761:INFO:          ipywidgets: 8.1.2
2024-04-05 22:09:31,761:INFO:                tqdm: 4.66.2
2024-04-05 22:09:31,761:INFO:               numpy: 1.26.4
2024-04-05 22:09:31,761:INFO:              pandas: 2.1.4
2024-04-05 22:09:31,761:INFO:              jinja2: 3.1.3
2024-04-05 22:09:31,761:INFO:               scipy: 1.11.4
2024-04-05 22:09:31,761:INFO:              joblib: 1.3.2
2024-04-05 22:09:31,761:INFO:             sklearn: 1.4.1.post1
2024-04-05 22:09:31,761:INFO:                pyod: 1.1.3
2024-04-05 22:09:31,761:INFO:            imblearn: 0.12.2
2024-04-05 22:09:31,761:INFO:   category_encoders: 2.6.3
2024-04-05 22:09:31,761:INFO:            lightgbm: 4.3.0
2024-04-05 22:09:31,761:INFO:               numba: 0.59.1
2024-04-05 22:09:31,761:INFO:            requests: 2.31.0
2024-04-05 22:09:31,761:INFO:          matplotlib: 3.7.5
2024-04-05 22:09:31,761:INFO:          scikitplot: 0.3.7
2024-04-05 22:09:31,761:INFO:         yellowbrick: 1.5
2024-04-05 22:09:31,761:INFO:              plotly: 5.20.0
2024-04-05 22:09:31,761:INFO:    plotly-resampler: Not installed
2024-04-05 22:09:31,761:INFO:             kaleido: 0.2.1
2024-04-05 22:09:31,761:INFO:           schemdraw: 0.15
2024-04-05 22:09:31,761:INFO:         statsmodels: 0.14.1
2024-04-05 22:09:31,761:INFO:              sktime: 0.28.0
2024-04-05 22:09:31,761:INFO:               tbats: 1.1.3
2024-04-05 22:09:31,762:INFO:            pmdarima: 2.0.4
2024-04-05 22:09:31,762:INFO:              psutil: 5.9.8
2024-04-05 22:09:31,762:INFO:          markupsafe: 2.1.5
2024-04-05 22:09:31,762:INFO:             pickle5: Not installed
2024-04-05 22:09:31,762:INFO:         cloudpickle: 3.0.0
2024-04-05 22:09:31,762:INFO:         deprecation: 2.1.0
2024-04-05 22:09:31,762:INFO:              xxhash: 3.4.1
2024-04-05 22:09:31,762:INFO:           wurlitzer: Not installed
2024-04-05 22:09:31,762:INFO:PyCaret optional dependencies:
2024-04-05 22:09:31,778:INFO:                shap: Not installed
2024-04-05 22:09:31,778:INFO:           interpret: Not installed
2024-04-05 22:09:31,778:INFO:                umap: Not installed
2024-04-05 22:09:31,778:INFO:     ydata_profiling: Not installed
2024-04-05 22:09:31,778:INFO:  explainerdashboard: Not installed
2024-04-05 22:09:31,778:INFO:             autoviz: Not installed
2024-04-05 22:09:31,778:INFO:           fairlearn: Not installed
2024-04-05 22:09:31,778:INFO:          deepchecks: Not installed
2024-04-05 22:09:31,779:INFO:             xgboost: Not installed
2024-04-05 22:09:31,779:INFO:            catboost: Not installed
2024-04-05 22:09:31,779:INFO:              kmodes: Not installed
2024-04-05 22:09:31,779:INFO:             mlxtend: Not installed
2024-04-05 22:09:31,779:INFO:       statsforecast: Not installed
2024-04-05 22:09:31,779:INFO:        tune_sklearn: Not installed
2024-04-05 22:09:31,779:INFO:                 ray: Not installed
2024-04-05 22:09:31,779:INFO:            hyperopt: Not installed
2024-04-05 22:09:31,779:INFO:              optuna: Not installed
2024-04-05 22:09:31,779:INFO:               skopt: Not installed
2024-04-05 22:09:31,779:INFO:              mlflow: Not installed
2024-04-05 22:09:31,779:INFO:              gradio: Not installed
2024-04-05 22:09:31,779:INFO:             fastapi: Not installed
2024-04-05 22:09:31,779:INFO:             uvicorn: Not installed
2024-04-05 22:09:31,779:INFO:              m2cgen: Not installed
2024-04-05 22:09:31,779:INFO:           evidently: Not installed
2024-04-05 22:09:31,779:INFO:               fugue: Not installed
2024-04-05 22:09:31,779:INFO:           streamlit: Not installed
2024-04-05 22:09:31,779:INFO:             prophet: Not installed
2024-04-05 22:09:31,779:INFO:None
2024-04-05 22:09:31,779:INFO:Set up data.
2024-04-05 22:09:31,849:INFO:Set up folding strategy.
2024-04-05 22:09:31,850:INFO:Set up train/test split.
2024-04-05 22:09:31,934:INFO:Set up index.
2024-04-05 22:09:31,946:INFO:Assigning column types.
2024-04-05 22:09:31,958:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-04-05 22:09:31,958:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-05 22:09:31,962:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-05 22:09:31,967:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,034:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,075:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,079:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,083:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,134:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,174:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,175:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2024-04-05 22:09:32,179:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,183:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,236:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,276:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,281:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,285:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,341:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,383:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,383:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,383:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,384:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2024-04-05 22:09:32,393:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,520:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,530:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,598:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,652:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,656:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2024-04-05 22:09:32,723:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,766:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,835:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,874:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,875:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,875:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,875:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-04-05 22:09:32,937:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:32,979:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:32,979:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,040:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2024-04-05 22:09:33,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,081:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2024-04-05 22:09:33,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,284:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,297:INFO:Preparing preprocessing pipeline...
2024-04-05 22:09:33,297:INFO:Set up simple imputation.
2024-04-05 22:09:33,302:INFO:Set up encoding of ordinal features.
2024-04-05 22:09:33,303:INFO:Set up encoding of categorical features.
2024-04-05 22:09:33,366:INFO:Finished creating preprocessing pipeline.
2024-04-05 22:09:33,421:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\shail\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2024-04-05 22:09:33,421:INFO:Creating final display dataframe.
2024-04-05 22:09:33,596:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target           charges
2                   Target type        Regression
3           Original data shape         (1338, 7)
4        Transformed data shape        (1338, 10)
5   Transformed train set shape         (936, 10)
6    Transformed test set shape         (402, 10)
7              Numeric features                 3
8          Categorical features                 3
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              7f0c
2024-04-05 22:09:33,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,807:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,808:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-04-05 22:09:33,842:WARNING:D:\Projects\pycaret\lib\site-packages\pycaret\internal\metrics.py:51: FutureWarning: The `needs_threshold` and `needs_proba` parameter are deprecated in version 1.4 and will be removed in 1.6. You can either let `response_method` be `None` or set it to `predict` to preserve the same behaviour.
  warnings.warn(

2024-04-05 22:09:33,842:INFO:setup() successfully completed in 2.34s...............
2024-04-05 22:09:33,843:INFO:Initializing compare_models()
2024-04-05 22:09:33,843:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2024-04-05 22:09:33,843:INFO:Checking exceptions
2024-04-05 22:09:33,844:INFO:Preparing display monitor
2024-04-05 22:09:33,886:INFO:Initializing Linear Regression
2024-04-05 22:09:33,886:INFO:Total runtime is 0.0 minutes
2024-04-05 22:09:33,886:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:33,886:INFO:Initializing create_model()
2024-04-05 22:09:33,886:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:33,886:INFO:Checking exceptions
2024-04-05 22:09:33,886:INFO:Importing libraries
2024-04-05 22:09:33,886:INFO:Copying training dataset
2024-04-05 22:09:33,890:INFO:Defining folds
2024-04-05 22:09:33,890:INFO:Declaring metric variables
2024-04-05 22:09:33,890:INFO:Importing untrained model
2024-04-05 22:09:33,890:INFO:Linear Regression Imported successfully
2024-04-05 22:09:33,890:INFO:Starting cross validation
2024-04-05 22:09:33,909:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:38,852:INFO:Calculating mean and std
2024-04-05 22:09:38,854:INFO:Creating metrics dataframe
2024-04-05 22:09:38,859:INFO:Uploading results into container
2024-04-05 22:09:38,860:INFO:Uploading model into container now
2024-04-05 22:09:38,861:INFO:_master_model_container: 1
2024-04-05 22:09:38,861:INFO:_display_container: 2
2024-04-05 22:09:38,862:INFO:LinearRegression(n_jobs=-1)
2024-04-05 22:09:38,862:INFO:create_model() successfully completed......................................
2024-04-05 22:09:38,955:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:38,955:INFO:Creating metrics dataframe
2024-04-05 22:09:38,972:INFO:Initializing Lasso Regression
2024-04-05 22:09:38,972:INFO:Total runtime is 0.0847731351852417 minutes
2024-04-05 22:09:38,973:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:38,973:INFO:Initializing create_model()
2024-04-05 22:09:38,973:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:38,973:INFO:Checking exceptions
2024-04-05 22:09:38,973:INFO:Importing libraries
2024-04-05 22:09:38,973:INFO:Copying training dataset
2024-04-05 22:09:38,977:INFO:Defining folds
2024-04-05 22:09:38,977:INFO:Declaring metric variables
2024-04-05 22:09:38,978:INFO:Importing untrained model
2024-04-05 22:09:38,978:INFO:Lasso Regression Imported successfully
2024-04-05 22:09:38,978:INFO:Starting cross validation
2024-04-05 22:09:38,980:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:39,212:INFO:Calculating mean and std
2024-04-05 22:09:39,214:INFO:Creating metrics dataframe
2024-04-05 22:09:39,218:INFO:Uploading results into container
2024-04-05 22:09:39,219:INFO:Uploading model into container now
2024-04-05 22:09:39,220:INFO:_master_model_container: 2
2024-04-05 22:09:39,220:INFO:_display_container: 2
2024-04-05 22:09:39,220:INFO:Lasso(random_state=42)
2024-04-05 22:09:39,220:INFO:create_model() successfully completed......................................
2024-04-05 22:09:39,285:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:39,285:INFO:Creating metrics dataframe
2024-04-05 22:09:39,288:INFO:Initializing Ridge Regression
2024-04-05 22:09:39,288:INFO:Total runtime is 0.09004266659418741 minutes
2024-04-05 22:09:39,288:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:39,289:INFO:Initializing create_model()
2024-04-05 22:09:39,289:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:39,289:INFO:Checking exceptions
2024-04-05 22:09:39,289:INFO:Importing libraries
2024-04-05 22:09:39,289:INFO:Copying training dataset
2024-04-05 22:09:39,294:INFO:Defining folds
2024-04-05 22:09:39,295:INFO:Declaring metric variables
2024-04-05 22:09:39,295:INFO:Importing untrained model
2024-04-05 22:09:39,295:INFO:Ridge Regression Imported successfully
2024-04-05 22:09:39,295:INFO:Starting cross validation
2024-04-05 22:09:39,297:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:39,558:INFO:Calculating mean and std
2024-04-05 22:09:39,560:INFO:Creating metrics dataframe
2024-04-05 22:09:39,565:INFO:Uploading results into container
2024-04-05 22:09:39,566:INFO:Uploading model into container now
2024-04-05 22:09:39,567:INFO:_master_model_container: 3
2024-04-05 22:09:39,567:INFO:_display_container: 2
2024-04-05 22:09:39,568:INFO:Ridge(random_state=42)
2024-04-05 22:09:39,568:INFO:create_model() successfully completed......................................
2024-04-05 22:09:39,666:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:39,666:INFO:Creating metrics dataframe
2024-04-05 22:09:39,675:INFO:Initializing Elastic Net
2024-04-05 22:09:39,675:INFO:Total runtime is 0.09649338722229003 minutes
2024-04-05 22:09:39,675:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:39,675:INFO:Initializing create_model()
2024-04-05 22:09:39,675:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:39,676:INFO:Checking exceptions
2024-04-05 22:09:39,676:INFO:Importing libraries
2024-04-05 22:09:39,676:INFO:Copying training dataset
2024-04-05 22:09:39,681:INFO:Defining folds
2024-04-05 22:09:39,681:INFO:Declaring metric variables
2024-04-05 22:09:39,681:INFO:Importing untrained model
2024-04-05 22:09:39,682:INFO:Elastic Net Imported successfully
2024-04-05 22:09:39,682:INFO:Starting cross validation
2024-04-05 22:09:39,684:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:39,919:INFO:Calculating mean and std
2024-04-05 22:09:39,920:INFO:Creating metrics dataframe
2024-04-05 22:09:39,922:INFO:Uploading results into container
2024-04-05 22:09:39,922:INFO:Uploading model into container now
2024-04-05 22:09:39,922:INFO:_master_model_container: 4
2024-04-05 22:09:39,923:INFO:_display_container: 2
2024-04-05 22:09:39,923:INFO:ElasticNet(random_state=42)
2024-04-05 22:09:39,923:INFO:create_model() successfully completed......................................
2024-04-05 22:09:39,971:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:39,971:INFO:Creating metrics dataframe
2024-04-05 22:09:39,974:INFO:Initializing Least Angle Regression
2024-04-05 22:09:39,975:INFO:Total runtime is 0.1014902114868164 minutes
2024-04-05 22:09:39,975:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:39,975:INFO:Initializing create_model()
2024-04-05 22:09:39,975:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:39,975:INFO:Checking exceptions
2024-04-05 22:09:39,975:INFO:Importing libraries
2024-04-05 22:09:39,975:INFO:Copying training dataset
2024-04-05 22:09:39,979:INFO:Defining folds
2024-04-05 22:09:39,979:INFO:Declaring metric variables
2024-04-05 22:09:39,979:INFO:Importing untrained model
2024-04-05 22:09:39,980:INFO:Least Angle Regression Imported successfully
2024-04-05 22:09:39,980:INFO:Starting cross validation
2024-04-05 22:09:39,981:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:40,327:INFO:Calculating mean and std
2024-04-05 22:09:40,328:INFO:Creating metrics dataframe
2024-04-05 22:09:40,330:INFO:Uploading results into container
2024-04-05 22:09:40,331:INFO:Uploading model into container now
2024-04-05 22:09:40,331:INFO:_master_model_container: 5
2024-04-05 22:09:40,331:INFO:_display_container: 2
2024-04-05 22:09:40,331:INFO:Lars(random_state=42)
2024-04-05 22:09:40,331:INFO:create_model() successfully completed......................................
2024-04-05 22:09:40,380:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:40,380:INFO:Creating metrics dataframe
2024-04-05 22:09:40,383:INFO:Initializing Lasso Least Angle Regression
2024-04-05 22:09:40,383:INFO:Total runtime is 0.10828644831975301 minutes
2024-04-05 22:09:40,383:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:40,384:INFO:Initializing create_model()
2024-04-05 22:09:40,384:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:40,384:INFO:Checking exceptions
2024-04-05 22:09:40,384:INFO:Importing libraries
2024-04-05 22:09:40,384:INFO:Copying training dataset
2024-04-05 22:09:40,388:INFO:Defining folds
2024-04-05 22:09:40,388:INFO:Declaring metric variables
2024-04-05 22:09:40,388:INFO:Importing untrained model
2024-04-05 22:09:40,388:INFO:Lasso Least Angle Regression Imported successfully
2024-04-05 22:09:40,388:INFO:Starting cross validation
2024-04-05 22:09:40,390:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:40,627:INFO:Calculating mean and std
2024-04-05 22:09:40,628:INFO:Creating metrics dataframe
2024-04-05 22:09:40,630:INFO:Uploading results into container
2024-04-05 22:09:40,630:INFO:Uploading model into container now
2024-04-05 22:09:40,630:INFO:_master_model_container: 6
2024-04-05 22:09:40,631:INFO:_display_container: 2
2024-04-05 22:09:40,631:INFO:LassoLars(random_state=42)
2024-04-05 22:09:40,631:INFO:create_model() successfully completed......................................
2024-04-05 22:09:40,679:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:40,679:INFO:Creating metrics dataframe
2024-04-05 22:09:40,682:INFO:Initializing Orthogonal Matching Pursuit
2024-04-05 22:09:40,682:INFO:Total runtime is 0.11326898336410522 minutes
2024-04-05 22:09:40,683:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:40,683:INFO:Initializing create_model()
2024-04-05 22:09:40,683:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:40,683:INFO:Checking exceptions
2024-04-05 22:09:40,683:INFO:Importing libraries
2024-04-05 22:09:40,683:INFO:Copying training dataset
2024-04-05 22:09:40,687:INFO:Defining folds
2024-04-05 22:09:40,687:INFO:Declaring metric variables
2024-04-05 22:09:40,687:INFO:Importing untrained model
2024-04-05 22:09:40,687:INFO:Orthogonal Matching Pursuit Imported successfully
2024-04-05 22:09:40,687:INFO:Starting cross validation
2024-04-05 22:09:40,689:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:40,928:INFO:Calculating mean and std
2024-04-05 22:09:40,929:INFO:Creating metrics dataframe
2024-04-05 22:09:40,930:INFO:Uploading results into container
2024-04-05 22:09:40,931:INFO:Uploading model into container now
2024-04-05 22:09:40,931:INFO:_master_model_container: 7
2024-04-05 22:09:40,931:INFO:_display_container: 2
2024-04-05 22:09:40,931:INFO:OrthogonalMatchingPursuit()
2024-04-05 22:09:40,931:INFO:create_model() successfully completed......................................
2024-04-05 22:09:40,981:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:40,981:INFO:Creating metrics dataframe
2024-04-05 22:09:40,984:INFO:Initializing Bayesian Ridge
2024-04-05 22:09:40,984:INFO:Total runtime is 0.11830064853032429 minutes
2024-04-05 22:09:40,984:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:40,984:INFO:Initializing create_model()
2024-04-05 22:09:40,984:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:40,984:INFO:Checking exceptions
2024-04-05 22:09:40,984:INFO:Importing libraries
2024-04-05 22:09:40,985:INFO:Copying training dataset
2024-04-05 22:09:40,988:INFO:Defining folds
2024-04-05 22:09:40,988:INFO:Declaring metric variables
2024-04-05 22:09:40,989:INFO:Importing untrained model
2024-04-05 22:09:40,989:INFO:Bayesian Ridge Imported successfully
2024-04-05 22:09:40,989:INFO:Starting cross validation
2024-04-05 22:09:40,991:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:41,244:INFO:Calculating mean and std
2024-04-05 22:09:41,245:INFO:Creating metrics dataframe
2024-04-05 22:09:41,247:INFO:Uploading results into container
2024-04-05 22:09:41,247:INFO:Uploading model into container now
2024-04-05 22:09:41,247:INFO:_master_model_container: 8
2024-04-05 22:09:41,247:INFO:_display_container: 2
2024-04-05 22:09:41,248:INFO:BayesianRidge()
2024-04-05 22:09:41,248:INFO:create_model() successfully completed......................................
2024-04-05 22:09:41,296:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:41,297:INFO:Creating metrics dataframe
2024-04-05 22:09:41,299:INFO:Initializing Passive Aggressive Regressor
2024-04-05 22:09:41,299:INFO:Total runtime is 0.1235499858856201 minutes
2024-04-05 22:09:41,300:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:41,300:INFO:Initializing create_model()
2024-04-05 22:09:41,300:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:41,300:INFO:Checking exceptions
2024-04-05 22:09:41,300:INFO:Importing libraries
2024-04-05 22:09:41,300:INFO:Copying training dataset
2024-04-05 22:09:41,304:INFO:Defining folds
2024-04-05 22:09:41,304:INFO:Declaring metric variables
2024-04-05 22:09:41,304:INFO:Importing untrained model
2024-04-05 22:09:41,304:INFO:Passive Aggressive Regressor Imported successfully
2024-04-05 22:09:41,304:INFO:Starting cross validation
2024-04-05 22:09:41,306:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:41,700:INFO:Calculating mean and std
2024-04-05 22:09:41,701:INFO:Creating metrics dataframe
2024-04-05 22:09:41,702:INFO:Uploading results into container
2024-04-05 22:09:41,703:INFO:Uploading model into container now
2024-04-05 22:09:41,703:INFO:_master_model_container: 9
2024-04-05 22:09:41,703:INFO:_display_container: 2
2024-04-05 22:09:41,703:INFO:PassiveAggressiveRegressor(random_state=42)
2024-04-05 22:09:41,703:INFO:create_model() successfully completed......................................
2024-04-05 22:09:41,752:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:41,752:INFO:Creating metrics dataframe
2024-04-05 22:09:41,755:INFO:Initializing Huber Regressor
2024-04-05 22:09:41,755:INFO:Total runtime is 0.13115327755610148 minutes
2024-04-05 22:09:41,755:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:41,755:INFO:Initializing create_model()
2024-04-05 22:09:41,755:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:41,755:INFO:Checking exceptions
2024-04-05 22:09:41,755:INFO:Importing libraries
2024-04-05 22:09:41,755:INFO:Copying training dataset
2024-04-05 22:09:41,759:INFO:Defining folds
2024-04-05 22:09:41,759:INFO:Declaring metric variables
2024-04-05 22:09:41,760:INFO:Importing untrained model
2024-04-05 22:09:41,760:INFO:Huber Regressor Imported successfully
2024-04-05 22:09:41,760:INFO:Starting cross validation
2024-04-05 22:09:41,761:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:41,931:WARNING:D:\Projects\pycaret\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-05 22:09:41,931:WARNING:D:\Projects\pycaret\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-05 22:09:41,931:WARNING:D:\Projects\pycaret\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-05 22:09:41,932:WARNING:D:\Projects\pycaret\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-05 22:09:41,932:WARNING:D:\Projects\pycaret\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-05 22:09:41,937:WARNING:D:\Projects\pycaret\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-05 22:09:41,941:WARNING:D:\Projects\pycaret\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-05 22:09:42,047:WARNING:D:\Projects\pycaret\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-05 22:09:42,048:WARNING:D:\Projects\pycaret\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2024-04-05 22:09:42,078:INFO:Calculating mean and std
2024-04-05 22:09:42,080:INFO:Creating metrics dataframe
2024-04-05 22:09:42,084:INFO:Uploading results into container
2024-04-05 22:09:42,085:INFO:Uploading model into container now
2024-04-05 22:09:42,086:INFO:_master_model_container: 10
2024-04-05 22:09:42,086:INFO:_display_container: 2
2024-04-05 22:09:42,086:INFO:HuberRegressor()
2024-04-05 22:09:42,086:INFO:create_model() successfully completed......................................
2024-04-05 22:09:42,150:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:42,150:INFO:Creating metrics dataframe
2024-04-05 22:09:42,153:INFO:Initializing K Neighbors Regressor
2024-04-05 22:09:42,153:INFO:Total runtime is 0.13778467178344728 minutes
2024-04-05 22:09:42,153:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:42,153:INFO:Initializing create_model()
2024-04-05 22:09:42,153:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:42,153:INFO:Checking exceptions
2024-04-05 22:09:42,154:INFO:Importing libraries
2024-04-05 22:09:42,154:INFO:Copying training dataset
2024-04-05 22:09:42,157:INFO:Defining folds
2024-04-05 22:09:42,157:INFO:Declaring metric variables
2024-04-05 22:09:42,158:INFO:Importing untrained model
2024-04-05 22:09:42,158:INFO:K Neighbors Regressor Imported successfully
2024-04-05 22:09:42,158:INFO:Starting cross validation
2024-04-05 22:09:42,160:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:42,446:INFO:Calculating mean and std
2024-04-05 22:09:42,448:INFO:Creating metrics dataframe
2024-04-05 22:09:42,454:INFO:Uploading results into container
2024-04-05 22:09:42,455:INFO:Uploading model into container now
2024-04-05 22:09:42,456:INFO:_master_model_container: 11
2024-04-05 22:09:42,457:INFO:_display_container: 2
2024-04-05 22:09:42,458:INFO:KNeighborsRegressor(n_jobs=-1)
2024-04-05 22:09:42,458:INFO:create_model() successfully completed......................................
2024-04-05 22:09:42,565:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:42,566:INFO:Creating metrics dataframe
2024-04-05 22:09:42,569:INFO:Initializing Decision Tree Regressor
2024-04-05 22:09:42,569:INFO:Total runtime is 0.14472780227661133 minutes
2024-04-05 22:09:42,569:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:42,569:INFO:Initializing create_model()
2024-04-05 22:09:42,569:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:42,569:INFO:Checking exceptions
2024-04-05 22:09:42,569:INFO:Importing libraries
2024-04-05 22:09:42,571:INFO:Copying training dataset
2024-04-05 22:09:42,575:INFO:Defining folds
2024-04-05 22:09:42,575:INFO:Declaring metric variables
2024-04-05 22:09:42,575:INFO:Importing untrained model
2024-04-05 22:09:42,575:INFO:Decision Tree Regressor Imported successfully
2024-04-05 22:09:42,576:INFO:Starting cross validation
2024-04-05 22:09:42,577:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:42,857:INFO:Calculating mean and std
2024-04-05 22:09:42,859:INFO:Creating metrics dataframe
2024-04-05 22:09:42,864:INFO:Uploading results into container
2024-04-05 22:09:42,866:INFO:Uploading model into container now
2024-04-05 22:09:42,867:INFO:_master_model_container: 12
2024-04-05 22:09:42,867:INFO:_display_container: 2
2024-04-05 22:09:42,868:INFO:DecisionTreeRegressor(random_state=42)
2024-04-05 22:09:42,868:INFO:create_model() successfully completed......................................
2024-04-05 22:09:42,973:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:42,973:INFO:Creating metrics dataframe
2024-04-05 22:09:42,978:INFO:Initializing Random Forest Regressor
2024-04-05 22:09:42,978:INFO:Total runtime is 0.1515433390935262 minutes
2024-04-05 22:09:42,978:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:42,978:INFO:Initializing create_model()
2024-04-05 22:09:42,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:42,978:INFO:Checking exceptions
2024-04-05 22:09:42,979:INFO:Importing libraries
2024-04-05 22:09:42,979:INFO:Copying training dataset
2024-04-05 22:09:42,983:INFO:Defining folds
2024-04-05 22:09:42,984:INFO:Declaring metric variables
2024-04-05 22:09:42,984:INFO:Importing untrained model
2024-04-05 22:09:42,984:INFO:Random Forest Regressor Imported successfully
2024-04-05 22:09:42,985:INFO:Starting cross validation
2024-04-05 22:09:42,986:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:44,071:INFO:Calculating mean and std
2024-04-05 22:09:44,072:INFO:Creating metrics dataframe
2024-04-05 22:09:44,074:INFO:Uploading results into container
2024-04-05 22:09:44,075:INFO:Uploading model into container now
2024-04-05 22:09:44,075:INFO:_master_model_container: 13
2024-04-05 22:09:44,075:INFO:_display_container: 2
2024-04-05 22:09:44,075:INFO:RandomForestRegressor(n_jobs=-1, random_state=42)
2024-04-05 22:09:44,075:INFO:create_model() successfully completed......................................
2024-04-05 22:09:44,135:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:44,136:INFO:Creating metrics dataframe
2024-04-05 22:09:44,138:INFO:Initializing Extra Trees Regressor
2024-04-05 22:09:44,138:INFO:Total runtime is 0.17086666425069175 minutes
2024-04-05 22:09:44,138:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:44,139:INFO:Initializing create_model()
2024-04-05 22:09:44,139:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:44,139:INFO:Checking exceptions
2024-04-05 22:09:44,139:INFO:Importing libraries
2024-04-05 22:09:44,139:INFO:Copying training dataset
2024-04-05 22:09:44,143:INFO:Defining folds
2024-04-05 22:09:44,143:INFO:Declaring metric variables
2024-04-05 22:09:44,143:INFO:Importing untrained model
2024-04-05 22:09:44,144:INFO:Extra Trees Regressor Imported successfully
2024-04-05 22:09:44,144:INFO:Starting cross validation
2024-04-05 22:09:44,145:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:45,102:INFO:Calculating mean and std
2024-04-05 22:09:45,104:INFO:Creating metrics dataframe
2024-04-05 22:09:45,109:INFO:Uploading results into container
2024-04-05 22:09:45,110:INFO:Uploading model into container now
2024-04-05 22:09:45,111:INFO:_master_model_container: 14
2024-04-05 22:09:45,111:INFO:_display_container: 2
2024-04-05 22:09:45,112:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=42)
2024-04-05 22:09:45,112:INFO:create_model() successfully completed......................................
2024-04-05 22:09:45,188:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:45,188:INFO:Creating metrics dataframe
2024-04-05 22:09:45,191:INFO:Initializing AdaBoost Regressor
2024-04-05 22:09:45,191:INFO:Total runtime is 0.1884178400039673 minutes
2024-04-05 22:09:45,192:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:45,192:INFO:Initializing create_model()
2024-04-05 22:09:45,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:45,192:INFO:Checking exceptions
2024-04-05 22:09:45,192:INFO:Importing libraries
2024-04-05 22:09:45,192:INFO:Copying training dataset
2024-04-05 22:09:45,196:INFO:Defining folds
2024-04-05 22:09:45,196:INFO:Declaring metric variables
2024-04-05 22:09:45,196:INFO:Importing untrained model
2024-04-05 22:09:45,196:INFO:AdaBoost Regressor Imported successfully
2024-04-05 22:09:45,196:INFO:Starting cross validation
2024-04-05 22:09:45,199:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:45,640:INFO:Calculating mean and std
2024-04-05 22:09:45,642:INFO:Creating metrics dataframe
2024-04-05 22:09:45,648:INFO:Uploading results into container
2024-04-05 22:09:45,649:INFO:Uploading model into container now
2024-04-05 22:09:45,650:INFO:_master_model_container: 15
2024-04-05 22:09:45,651:INFO:_display_container: 2
2024-04-05 22:09:45,651:INFO:AdaBoostRegressor(random_state=42)
2024-04-05 22:09:45,652:INFO:create_model() successfully completed......................................
2024-04-05 22:09:45,730:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:45,730:INFO:Creating metrics dataframe
2024-04-05 22:09:45,733:INFO:Initializing Gradient Boosting Regressor
2024-04-05 22:09:45,733:INFO:Total runtime is 0.19745697577794394 minutes
2024-04-05 22:09:45,733:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:45,734:INFO:Initializing create_model()
2024-04-05 22:09:45,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:45,734:INFO:Checking exceptions
2024-04-05 22:09:45,734:INFO:Importing libraries
2024-04-05 22:09:45,734:INFO:Copying training dataset
2024-04-05 22:09:45,738:INFO:Defining folds
2024-04-05 22:09:45,738:INFO:Declaring metric variables
2024-04-05 22:09:45,738:INFO:Importing untrained model
2024-04-05 22:09:45,739:INFO:Gradient Boosting Regressor Imported successfully
2024-04-05 22:09:45,739:INFO:Starting cross validation
2024-04-05 22:09:45,740:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:46,301:INFO:Calculating mean and std
2024-04-05 22:09:46,302:INFO:Creating metrics dataframe
2024-04-05 22:09:46,303:INFO:Uploading results into container
2024-04-05 22:09:46,304:INFO:Uploading model into container now
2024-04-05 22:09:46,304:INFO:_master_model_container: 16
2024-04-05 22:09:46,304:INFO:_display_container: 2
2024-04-05 22:09:46,305:INFO:GradientBoostingRegressor(random_state=42)
2024-04-05 22:09:46,305:INFO:create_model() successfully completed......................................
2024-04-05 22:09:46,353:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:46,354:INFO:Creating metrics dataframe
2024-04-05 22:09:46,356:INFO:Initializing Light Gradient Boosting Machine
2024-04-05 22:09:46,357:INFO:Total runtime is 0.2078340729077657 minutes
2024-04-05 22:09:46,357:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:46,357:INFO:Initializing create_model()
2024-04-05 22:09:46,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:46,357:INFO:Checking exceptions
2024-04-05 22:09:46,357:INFO:Importing libraries
2024-04-05 22:09:46,357:INFO:Copying training dataset
2024-04-05 22:09:46,361:INFO:Defining folds
2024-04-05 22:09:46,361:INFO:Declaring metric variables
2024-04-05 22:09:46,361:INFO:Importing untrained model
2024-04-05 22:09:46,362:INFO:Light Gradient Boosting Machine Imported successfully
2024-04-05 22:09:46,362:INFO:Starting cross validation
2024-04-05 22:09:46,363:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:47,829:INFO:Calculating mean and std
2024-04-05 22:09:47,831:INFO:Creating metrics dataframe
2024-04-05 22:09:47,834:INFO:Uploading results into container
2024-04-05 22:09:47,835:INFO:Uploading model into container now
2024-04-05 22:09:47,835:INFO:_master_model_container: 17
2024-04-05 22:09:47,836:INFO:_display_container: 2
2024-04-05 22:09:47,836:INFO:LGBMRegressor(n_jobs=-1, random_state=42)
2024-04-05 22:09:47,836:INFO:create_model() successfully completed......................................
2024-04-05 22:09:47,905:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:47,906:INFO:Creating metrics dataframe
2024-04-05 22:09:47,911:INFO:Initializing Dummy Regressor
2024-04-05 22:09:47,911:INFO:Total runtime is 0.23374921480814614 minutes
2024-04-05 22:09:47,911:INFO:SubProcess create_model() called ==================================
2024-04-05 22:09:47,912:INFO:Initializing create_model()
2024-04-05 22:09:47,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001804436DD90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:47,912:INFO:Checking exceptions
2024-04-05 22:09:47,912:INFO:Importing libraries
2024-04-05 22:09:47,912:INFO:Copying training dataset
2024-04-05 22:09:47,919:INFO:Defining folds
2024-04-05 22:09:47,919:INFO:Declaring metric variables
2024-04-05 22:09:47,920:INFO:Importing untrained model
2024-04-05 22:09:47,920:INFO:Dummy Regressor Imported successfully
2024-04-05 22:09:47,921:INFO:Starting cross validation
2024-04-05 22:09:47,923:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-04-05 22:09:48,164:INFO:Calculating mean and std
2024-04-05 22:09:48,166:INFO:Creating metrics dataframe
2024-04-05 22:09:48,170:INFO:Uploading results into container
2024-04-05 22:09:48,172:INFO:Uploading model into container now
2024-04-05 22:09:48,173:INFO:_master_model_container: 18
2024-04-05 22:09:48,173:INFO:_display_container: 2
2024-04-05 22:09:48,173:INFO:DummyRegressor()
2024-04-05 22:09:48,174:INFO:create_model() successfully completed......................................
2024-04-05 22:09:48,238:INFO:SubProcess create_model() end ==================================
2024-04-05 22:09:48,238:INFO:Creating metrics dataframe
2024-04-05 22:09:48,349:WARNING:D:\Projects\pycaret\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2024-04-05 22:09:48,357:INFO:Initializing create_model()
2024-04-05 22:09:48,357:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=GradientBoostingRegressor(random_state=42), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:48,358:INFO:Checking exceptions
2024-04-05 22:09:48,361:INFO:Importing libraries
2024-04-05 22:09:48,361:INFO:Copying training dataset
2024-04-05 22:09:48,375:INFO:Defining folds
2024-04-05 22:09:48,376:INFO:Declaring metric variables
2024-04-05 22:09:48,376:INFO:Importing untrained model
2024-04-05 22:09:48,377:INFO:Declaring custom model
2024-04-05 22:09:48,379:INFO:Gradient Boosting Regressor Imported successfully
2024-04-05 22:09:48,383:INFO:Cross validation set to False
2024-04-05 22:09:48,383:INFO:Fitting Model
2024-04-05 22:09:48,533:INFO:GradientBoostingRegressor(random_state=42)
2024-04-05 22:09:48,533:INFO:create_model() successfully completed......................................
2024-04-05 22:09:48,599:INFO:_master_model_container: 18
2024-04-05 22:09:48,599:INFO:_display_container: 2
2024-04-05 22:09:48,600:INFO:GradientBoostingRegressor(random_state=42)
2024-04-05 22:09:48,600:INFO:compare_models() successfully completed......................................
2024-04-05 22:09:48,600:INFO:Initializing finalize_model()
2024-04-05 22:09:48,600:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=GradientBoostingRegressor(random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-04-05 22:09:48,600:INFO:Finalizing GradientBoostingRegressor(random_state=42)
2024-04-05 22:09:48,603:INFO:Initializing create_model()
2024-04-05 22:09:48,603:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001802EC47BE0>, estimator=GradientBoostingRegressor(random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-04-05 22:09:48,603:INFO:Checking exceptions
2024-04-05 22:09:48,604:INFO:Importing libraries
2024-04-05 22:09:48,604:INFO:Copying training dataset
2024-04-05 22:09:48,604:INFO:Defining folds
2024-04-05 22:09:48,604:INFO:Declaring metric variables
2024-04-05 22:09:48,604:INFO:Importing untrained model
2024-04-05 22:09:48,604:INFO:Declaring custom model
2024-04-05 22:09:48,605:INFO:Gradient Boosting Regressor Imported successfully
2024-04-05 22:09:48,606:INFO:Cross validation set to False
2024-04-05 22:09:48,606:INFO:Fitting Model
2024-04-05 22:09:48,811:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))])
2024-04-05 22:09:48,811:INFO:create_model() successfully completed......................................
2024-04-05 22:09:48,859:INFO:_master_model_container: 18
2024-04-05 22:09:48,859:INFO:_display_container: 2
2024-04-05 22:09:48,908:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))])
2024-04-05 22:09:48,908:INFO:finalize_model() successfully completed......................................
2024-04-05 22:09:49,043:INFO:Initializing save_model()
2024-04-05 22:09:49,043:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))]), model_name=insurance_regression_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\shail\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerW...
                                                                     'smoker'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'sex',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2024-04-05 22:09:49,043:INFO:Adding model into prep_pipe
2024-04-05 22:09:49,043:WARNING:Only Model saved as it was a pipeline.
2024-04-05 22:09:49,102:INFO:insurance_regression_model.pkl saved in current working directory
2024-04-05 22:09:49,146:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))])
2024-04-05 22:09:49,147:INFO:save_model() successfully completed......................................
2024-04-05 22:15:16,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:15:16,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:15:16,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:15:16,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:15:16,628:INFO:Initializing load_model()
2024-04-05 22:15:16,628:INFO:load_model(model_name=insurance_regression_model, platform=None, authentication=None, verbose=True)
2024-04-05 22:15:16,807:INFO:Initializing predict_model()
2024-04-05 22:15:16,807:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000026346042C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000026345AFE040>)
2024-04-05 22:15:16,808:INFO:Checking exceptions
2024-04-05 22:15:16,808:INFO:Preloading libraries
2024-04-05 22:15:16,808:INFO:Set up data.
2024-04-05 22:15:16,810:INFO:Set up index.
2024-04-05 22:19:50,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:19:50,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:19:50,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:19:50,269:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:19:50,395:INFO:Initializing load_model()
2024-04-05 22:19:50,395:INFO:load_model(model_name=insurance_regression_model, platform=None, authentication=None, verbose=True)
2024-04-05 22:19:50,467:INFO:Initializing predict_model()
2024-04-05 22:19:50,467:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000298EEFA2C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000298EEEFE040>)
2024-04-05 22:19:50,467:INFO:Checking exceptions
2024-04-05 22:19:50,467:INFO:Preloading libraries
2024-04-05 22:19:50,467:INFO:Set up data.
2024-04-05 22:19:50,470:INFO:Set up index.
2024-04-05 22:20:18,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:20:18,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:20:18,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:20:18,323:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:20:18,448:INFO:Initializing load_model()
2024-04-05 22:20:18,448:INFO:load_model(model_name=insurance_regression_model, platform=None, authentication=None, verbose=True)
2024-04-05 22:20:18,517:INFO:Initializing predict_model()
2024-04-05 22:20:18,517:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020103852C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000201037AE040>)
2024-04-05 22:20:18,517:INFO:Checking exceptions
2024-04-05 22:20:18,517:INFO:Preloading libraries
2024-04-05 22:20:18,518:INFO:Set up data.
2024-04-05 22:20:18,520:INFO:Set up index.
2024-04-05 22:20:45,700:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:20:45,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:20:45,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:20:45,701:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:20:45,825:INFO:Initializing load_model()
2024-04-05 22:20:45,826:INFO:load_model(model_name=insurance_regression_model, platform=None, authentication=None, verbose=True)
2024-04-05 22:20:45,894:INFO:Initializing predict_model()
2024-04-05 22:20:45,894:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A4AEE62C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A4AE8FE040>)
2024-04-05 22:20:45,895:INFO:Checking exceptions
2024-04-05 22:20:45,895:INFO:Preloading libraries
2024-04-05 22:20:45,895:INFO:Set up data.
2024-04-05 22:20:45,898:INFO:Set up index.
2024-04-05 22:21:26,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:21:26,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:21:26,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:21:26,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:21:26,182:INFO:Initializing load_model()
2024-04-05 22:21:26,182:INFO:load_model(model_name=insurance_regression_model, platform=None, authentication=None, verbose=True)
2024-04-05 22:21:26,253:INFO:Initializing predict_model()
2024-04-05 22:21:26,253:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000020D3F572C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020D3F4CE040>)
2024-04-05 22:21:26,253:INFO:Checking exceptions
2024-04-05 22:21:26,253:INFO:Preloading libraries
2024-04-05 22:21:26,253:INFO:Set up data.
2024-04-05 22:21:26,256:INFO:Set up index.
2024-04-05 22:21:40,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:21:40,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:21:40,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:21:40,097:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:21:40,218:INFO:Initializing load_model()
2024-04-05 22:21:40,218:INFO:load_model(model_name=insurance_regression_model, platform=None, authentication=None, verbose=True)
2024-04-05 22:21:40,288:INFO:Initializing predict_model()
2024-04-05 22:21:40,288:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001CE025E2C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CE0253E040>)
2024-04-05 22:21:40,288:INFO:Checking exceptions
2024-04-05 22:21:40,288:INFO:Preloading libraries
2024-04-05 22:21:40,288:INFO:Set up data.
2024-04-05 22:21:40,291:INFO:Set up index.
2024-04-05 22:22:02,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:22:02,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:22:02,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:22:02,808:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-04-05 22:22:02,935:INFO:Initializing load_model()
2024-04-05 22:22:02,935:INFO:load_model(model_name=insurance_regression_model, platform=None, authentication=None, verbose=True)
2024-04-05 22:22:03,005:INFO:Initializing predict_model()
2024-04-05 22:22:03,005:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000002A3C3B42C10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['age', 'bmi', 'children'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['sex', 'smoker', 'region'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('ordinal_encoding',
                 TransformerWrapper(include=['sex', 'smoker'],
                                    transfor...
                                                                         'data_type': dtype('O'),
                                                                         'mapping': female    0
male      1
NaN      -1
dtype: int64},
                                                                        {'col': 'smoker',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': no     0
yes    1
NaN   -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['region'],
                                    transformer=OneHotEncoder(cols=['region'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 GradientBoostingRegressor(random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002A3C35EE040>)
2024-04-05 22:22:03,006:INFO:Checking exceptions
2024-04-05 22:22:03,006:INFO:Preloading libraries
2024-04-05 22:22:03,006:INFO:Set up data.
2024-04-05 22:22:03,008:INFO:Set up index.
